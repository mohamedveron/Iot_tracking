openapi: 3.0.0
info:
  description: >-
    IOT Tracking API definition that is used as a contract between Frontend and
    backend
  version: 1.0.2-oas3
  title: IOT Tracking API
  contact:
    email: mohamedveron23@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:

  /devices/:
    post:   
      summary: >-
        Accepts device data to create device.
      operationId: createDevice
      description: Create new device.
      requestBody:
        description: createDevice request data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          description: device created with this id
          content:
            application/json:
              schema:
                type: integer
                format: int64 
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
  
  /devices/{id}:
    post:   
      summary: >-
        Accepts sim card data to add it to device.
      operationId: configureDevice
      description: Configure device.
      parameters:
      - name: id
        in: path
        description: pass an device id to add sim card
        required: true
        schema:
          type: integer
          format: int64 
      requestBody:
        description: configureDevice request data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIMCard'
      responses:
        '200':
          description: device Configured
        '400':
          description: 'invalid input, object invalid'
    
  /devices/{deviceId}/{status}:           
    put:   
      summary: >-
        Accepts device data to update the device configration status.
      operationId: UpdateDevice
      description: Update device.
      parameters:
       - name: deviceId
         in: path
         description: pass an device id to update sim card status
         required: true
         schema:
           type: integer
           format: int64
       - name: status
         in: path
         description: new configruation status
         required: true
         schema:
           type: string     
      responses:
        '201':
          description: device updated
        '400':
          description: 'invalid input, object invalid'    
   
                 
  /devices/pending:        
    get:
      summary: >-
        get device waiting for activation .
      operationId: getPendingDevices
      description: Get Pending Devices .
      responses:
        '200':
          description: devices returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDetails'    
        '400':
          description: 'invalid input, object invalid'
  
  /devices/ready:        
    get:
      summary: >-
        get device ready for sale .
      operationId: getReadyDevices
      description: Get Ready Devices .
      responses:
        '200':
          description: devices returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDetails'    
        '400':
          description: 'invalid input, object invalid'                              
      
components:    
  schemas:
  
    DeviceDetails: 
      allOf:
        - $ref: '#/components/schemas/Device'
        - required:
          - id
          - SIMCard
        - type: object  
          properties:
            id:
              type: integer
              format: int64
            SIMCard:
              type: object
              $ref: '#/components/schemas/SIMCard'  
  
    Device: 
      required:
      - temperature
      type: object
      properties:
        status:
          type: string
          example: ready
        temperature:
          type: float
          example: -25.
    
    SIMCard: 
      required:
      - operatorCode
      - status
      type: object
      properties:
        operatorCode:
          type: string
          example: true
        status:
          type: string
          example: active
        country:
          type: string
          example: Egypt     
  